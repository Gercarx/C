#include <stdio.h>
#include <sys/socket.h>
#include <stdlib.h>
#include <netinet/in.h>
#include <unistd.h>
#include <string.h>
int main() {
	int sockfd = socket(AF_INET, SOCK_STREAM, 0);
	if (sockfd == -1) {
		perror("errore socket");
		exit(EXIT_FAILURE);
	}
	printf("socket avvenuto con successo\n");

	struct sockaddr_in addr;
	addr.sin_family = AF_INET;
	addr.sin_port = htons(8081);
	addr.sin_addr.s_addr = INADDR_ANY;

	socklen_t addrl = sizeof(addr);
	int opt = 1;
	setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, &opt, sizeof(opt));
	int bindfd = bind(sockfd, (struct sockaddr*)&addr, addrl);
	if (bindfd == -1) {
		perror("errore bind");
		exit(EXIT_FAILURE);
	}
	printf("bind avvenuto con successo\n");

	int listenfd = listen(sockfd, 3);
	if (listenfd == -1) {
		perror("listen error");
		exit(EXIT_FAILURE);
	}
	printf("listen avvenuto con successo\n");

	int acceptfd = accept(sockfd, (struct sockaddr*)&addr, &addrl);
	if (acceptfd == -1) {
		perror("errore accept");
		exit(EXIT_FAILURE);
	}
	printf("accept avvenuto con successo\n");

	char buffer[1024];
	ssize_t bytes_read;
	bytes_read = read(acceptfd, buffer, sizeof(buffer));
	if (bytes_read == -1) {
		perror("errore read");
		exit(EXIT_FAILURE);
	}
	printf("read avvenuto con successo\n");
	char response[] =
		"HTTP/1.1 200 OK\r\n"
		"Content-Type:text/html\r\n"
		"Connection:keep-alive\r\n"
		"\r\n"
		"<html><body><h1>CIAO CLIENT</h1></body></html>";
	ssize_t bytes_write = write(acceptfd, response, strlen(response));
	if (bytes_write == -1) {
		perror("errore write");
		exit(EXIT_FAILURE);
	}
	printf("write avvenuto");
	return 0;
}
